{"version":3,"file":"graphql.js","sources":["../src/middlewares.js","../src/transports.js","../src/graphql.js"],"sourcesContent":["import magnus from './index'\n\nconst TIMEOUT = 'TIMEOUT'\n\nfunction createTimeout (milliseconds = 0) {\n  return new Promise((resolve) => {\n    setTimeout(function () {\n      resolve(TIMEOUT)\n    }, milliseconds)\n  })\n}\n\nfunction waitUntilAuthenticated (timeout) {\n  let expired = false\n  timeout.then(() => {\n    expired = true\n  })\n  return Promise.race([\n    timeout,\n    new Promise((resolve) => {\n      if (expired === true) {\n        resolve(TIMEOUT)\n        return\n      }\n      if (magnus.state.isAuthenticating) {\n        setTimeout(function () {\n          resolve(waitUntilAuthenticated(timeout))\n        }, 100)\n        return\n      }\n      if (magnus.state.isAuthenticated) {\n        resolve()\n        return\n      }\n      magnus.authenticate()\n      setTimeout(function () {\n        resolve(waitUntilAuthenticated(timeout))\n      }, 100)\n      return\n    })\n  ])\n}\n\nexport const HTTPBearerMiddleware = {\n  applyMiddleware ({ request, options }, next) {\n    const opts = options.options || {}\n    if (opts.authorization === false) {\n      return next()\n    }\n    if (magnus.state.isAuthenticated === false) {\n      const milliseconds = opts.timeout || 5000\n      const timeout = createTimeout(milliseconds)\n      waitUntilAuthenticated(timeout).then((result) => {\n        if (result === TIMEOUT) {\n          throw new Error(`authentication timeout after ${milliseconds}ms`)\n        }\n        HTTPBearerMiddleware.applyMiddleware({ request, options }, next)\n      })\n      return\n    }\n    const headers = Object.assign({}, options.headers, {\n      'Authorization': `Bearer ${magnus.session.idToken}`\n    })\n    options.headers = headers\n    return next()\n  }\n}\n","import fetch from 'isomorphic-fetch'\nimport { HTTPBearerMiddleware } from './middlewares'\n\nexport class HTTPTransport {\n  constructor (uri, init = {}) {\n    if (!uri) {\n      throw new Error('A remote endpoint is required for a network layer')\n    }\n\n    if (typeof uri !== 'string') {\n      throw new Error('Remote endpoint must be a string')\n    }\n\n    this._uri = uri\n    this._init = init\n    this._middlewares = []\n    this._afterwares = []\n  }\n\n  applyMiddlewares ({ request, options }) {\n    return new Promise((resolve) => {\n      const queue = (funcs, scope) => {\n        const next = () => {\n          if (funcs.length > 0) {\n            const f = funcs.shift()\n            f.applyMiddleware.apply(scope, [{ request, options }, next])\n          } else {\n            resolve({\n              request,\n              options\n            })\n          }\n        }\n        next()\n      }\n\n      // iterate through middlewares using next callback\n      queue([...this._middlewares], this)\n    })\n  }\n\n  applyAfterwares ({ response, options }) {\n    return new Promise((resolve) => {\n      const queue = (funcs, scope) => {\n        const next = () => {\n          if (funcs.length > 0) {\n            const f = funcs.shift()\n            f.applyAfterware.apply(scope, [{ response, options }, next])\n          } else {\n            resolve({\n              response,\n              options\n            })\n          }\n        }\n        next()\n      }\n\n      // iterate through afterwares using next callback\n      queue([...this._afterwares], this)\n    })\n  }\n\n  fetchFromRemoteEndpoint ({ request, options }) {\n    const input = request.url\n    const init = Object.assign({}, options)\n    delete input.options\n    return fetch(input, init)\n  }\n\n  fetch (input, init = {}) {\n    const request = {\n      url: `${this._uri}${input}`\n    }\n    const options = Object.assign({}, this._init, init, {\n      headers: Object.assign({}, this._init.headers, init.headers),\n      options: Object.assign({}, this._init.options, init.options)\n    })\n\n    return this.applyMiddlewares({ request, options })\n      .then(this.fetchFromRemoteEndpoint.bind(this))\n      .then((response) => {\n        this.applyAfterwares({ response, options })\n        return response\n      })\n  }\n\n  use (middlewares) {\n    middlewares.map((middleware) => {\n      if (typeof middleware.applyMiddleware === 'function') {\n        this._middlewares.push(middleware)\n      } else {\n        throw new Error(`Middleware must implement the applyMiddleware function`)\n      }\n    })\n  }\n\n  useAfter (afterwares) {\n    afterwares.map((afterware) => {\n      if (typeof afterware.applyAfterware === 'function') {\n        this._afterwares.push(afterware)\n      } else {\n        throw new Error(`Afterware must implement the applyAfterware function`)\n      }\n    })\n  }\n}\n\nexport class HTTPBearerTransport extends HTTPTransport {\n  constructor (uri, init = {}) {\n    super(uri, init)\n    this.use([HTTPBearerMiddleware])\n  }\n}\n","import { HTTPBearerTransport } from './transports'\nimport { QueryBatcher } from 'apollo-client/transport/batching'\nimport { printRequest } from 'apollo-client/transport/networkInterface'\n\nexport class GraphQLHTTPFetchNetworkInterface extends HTTPBearerTransport {\n  constructor (uri, init = {}) {\n    super(uri, init)\n  }\n\n  queryFetchFromRemoteEndpoint ({ request: request0, options }) {\n    const request = {\n      url: request0.url\n    }\n    delete request0.url\n    return this.fetchFromRemoteEndpoint({\n      request: request,\n      options: Object.assign({}, {\n        body: JSON.stringify(printRequest(request0)),\n        cache: 'no-cache',\n        credentials: 'omit',\n        method: 'POST',\n        mode: 'cors'\n      }, options, {\n        headers: Object.assign({}, {\n          'Accept': '*/*',\n          'Content-Type': 'application/json charset=utf-8'\n        }, options.headers)\n      })\n    })\n  }\n\n  query (input, init = {}) {\n    const request = {\n      ...input,\n      url: this._uri\n    }\n    const options = Object.assign({}, this._init, init, {\n      headers: Object.assign({}, this._init.headers, init.headers),\n      options: Object.assign({}, this._init.options, init.options)\n    })\n\n    return this.applyMiddlewares({ request, options })\n      .then(this.queryFetchFromRemoteEndpoint.bind(this))\n      .then((response) => {\n        this.applyAfterwares({ response, options })\n        return response\n      })\n      .then((response) => response.json())\n      .then((payload) => {\n        if (!payload.hasOwnProperty('data') && !payload.hasOwnProperty('errors')) {\n          throw new Error(`Server response was missing for query '${request.debugName}'.`)\n        } else {\n          return payload.data\n        }\n      })\n  }\n}\n\nexport class GraphQLHTTPBatchedNetworkInterface extends GraphQLHTTPFetchNetworkInterface {\n  constructor (uri, pollInterval, fetchOpts) {\n    super(uri, fetchOpts)\n\n    if (typeof pollInterval !== 'number') {\n      throw new Error(`pollInterval must be a number, got ${pollInterval}`)\n    }\n\n    this.pollInterval = pollInterval\n    this.batcher = new QueryBatcher({\n      batchFetchFunction: this.batchQuery.bind(this)\n    })\n    this.batcher.start(this.pollInterval)\n  }\n\n  query (input) {\n    const request = {\n      ...input,\n      url: this._uri\n    }\n    // we just pass it through to the batcher.\n    return new Promise((resolve, reject) => {\n      this.batcher.enqueueRequest(request).then(resolve, reject)\n    })\n  }\n\n  // made public for testing only\n  batchQuery (requests) {\n    const options = Object.assign({}, this._opts)\n\n    // Apply the middlewares to each of the requests\n    const middlewarePromises = []\n    requests.forEach((request) => {\n      middlewarePromises.push(this.applyMiddlewares({\n        request,\n        options\n      }))\n    })\n\n    return new Promise((resolve, reject) => {\n      Promise.all(middlewarePromises)\n        .then((requestsAndOptions) => {\n          return this.batchedFetchFromRemoteEndpoint(requestsAndOptions)\n            .then((result) => result.json())\n            .then((responses) => {\n              if (typeof responses.map !== 'function') {\n                throw new Error('GraphQLHTTPBatchedNetworkInterface: server response is not an array')\n              }\n\n              const afterwaresPromises = responses.map((response, index) => {\n                return this.applyAfterwares({\n                  response,\n                  options: requestsAndOptions[index].options\n                })\n              })\n\n              Promise.all(afterwaresPromises)\n                .then((responsesAndOptions) => {\n                  const results = []\n                  responsesAndOptions.forEach(({ response }) => {\n                    results.push(response)\n                  })\n                  resolve(results)\n                })\n                .catch((error) => {\n                  reject(error)\n                })\n            })\n        })\n        .catch((error) => {\n          reject(error)\n        })\n    })\n  }\n\n  batchedFetchFromRemoteEndpoint (requestsAndOptions) {\n    const request = {\n      url: this._uri\n    }\n    const options = {}\n\n    // Combine all of the options given by the middleware into one object.\n    requestsAndOptions.forEach((requestAndOptions) => {\n      if (requestAndOptions.request.url) {\n        request.url = requestAndOptions.request.url\n        delete requestAndOptions.request.url\n      }\n      Object.assign(options, requestAndOptions.options)\n    })\n\n    // Serialize the requests to strings of JSON\n    const printedRequests = requestsAndOptions.map((requestAndOptions) => {\n      return printRequest(requestAndOptions.request)\n    })\n\n    return this.fetchFromRemoteEndpoint({\n      request: request,\n      options: Object.assign({}, {\n        body: JSON.stringify(printedRequests),\n        cache: 'no-cache',\n        credentials: 'omit',\n        method: 'POST',\n        mode: 'cors'\n      }, options, {\n        headers: Object.assign({}, {\n          'Accept': '*/*',\n          'Content-Type': 'application/json charset=utf-8'\n        }, options.headers)\n      })\n    })\n  }\n}\n\nexport function createGraphQLNetworkInterface (options) {\n  if (!options) {\n    throw new Error(`You must pass an options argument to createGraphQLNetworkInterface.`)\n  }\n  if (options.batchInterval) {\n    return new GraphQLHTTPBatchedNetworkInterface(options.uri, options.batchInterval, options.opts)\n  } else {\n    return new GraphQLHTTPFetchNetworkInterface(options.uri, options.opts)\n  }\n}\n\nexport default {\n  GraphQLHTTPFetchNetworkInterface,\n  GraphQLHTTPBatchedNetworkInterface,\n  createGraphQLNetworkInterface\n}\n"],"names":["TIMEOUT","createTimeout","milliseconds","Promise","resolve","waitUntilAuthenticated","timeout","expired","then","race","magnus","state","isAuthenticating","isAuthenticated","authenticate","HTTPBearerMiddleware","next","request","options","opts","authorization","result","Error","applyMiddleware","headers","Object","assign","session","idToken","HTTPTransport","uri","init","_uri","_init","_middlewares","_afterwares","queue","funcs","scope","length","f","shift","apply","response","applyAfterware","input","url","fetch","applyMiddlewares","fetchFromRemoteEndpoint","bind","applyAfterwares","middlewares","map","middleware","push","afterwares","afterware","HTTPBearerTransport","use","GraphQLHTTPFetchNetworkInterface","request0","JSON","stringify","printRequest","queryFetchFromRemoteEndpoint","json","payload","hasOwnProperty","debugName","data","GraphQLHTTPBatchedNetworkInterface","pollInterval","fetchOpts","batcher","QueryBatcher","batchQuery","start","reject","enqueueRequest","requests","_opts","middlewarePromises","forEach","all","requestsAndOptions","batchedFetchFromRemoteEndpoint","responses","afterwaresPromises","index","responsesAndOptions","results","catch","error","requestAndOptions","printedRequests","createGraphQLNetworkInterface","batchInterval"],"mappings":"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"}